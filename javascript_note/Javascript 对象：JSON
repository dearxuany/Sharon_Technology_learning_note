# JSON 
JavaScript 对象表示法（JavaScript Object Notation）;</br>
JSON 是轻量级的文本数据交换格式（纯文本）;</br>
JSON 使用 JavaScript 语法来描述数据对象，但是 JSON 仍然独立于语言和平台;</br>
JSON 能够使用内建的 JavaScript eval() 方法进行解析,可使用 AJAX 进行传输;</br>
JSON 解析器和 JSON 库支持许多不同的编程语言;</br>

## JSON语法规则
### JSON数据书写格式 key:value
```
"firstName":"Sharon"
```
等价于javascript中
```
firstName="Sharon"
```

### JSON的值格式
* 数字（整数或浮点数）
* 字符串（在双引号""中）
* 逻辑值（true 或 false）
* 数组（在方括号[]中）
* 对象（在花括号{}中）
* null

#### JSON对象
类似于python的字典，用{}栝起，两个item间用逗号，隔开
```
{"firstName":"Sharon","lastName":"Li"}
```
等价于js中
```
firstName = "Sharon"
lastName = "Li"
```

#### JSON数组
类似于python的列表，可用来存放多个字典，中间用逗号分隔。
首先是多个item组成列表
```
[{"firstName":"Sharon","lastName":"Li"},{"firstName":"Tom","lastName":"Tang"},{"firstName":"Jack","lastName":"Tang"}]
```
将上面的列表作为另外一个item的value
```
{
"students":[
{"firstName":"Sharon","lastName":"Li"},
{"firstName":"Tom","lastName":"Tang"},
{"firstName":"Jack","lastName":"Tang"}
]
}
```
通过js语法创建对象
```
var students=[
{"firstName":"Sharon","lastName":"Li"},
{"firstName":"Tom","lastName":"Tang"},
{"firstName":"Jack","lastName":"Tang"}
]；
```







